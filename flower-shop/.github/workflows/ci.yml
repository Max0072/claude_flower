name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test-frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
        
    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Lint
      run: npm run lint
      
    - name: Test
      run: npm test
      
  lint-and-test-backend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
        
    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: [4.4]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./backend/package-lock.json
        
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.8.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Setup environment variables
      run: |
        echo "NODE_ENV=test" >> .env.test
        echo "MONGO_URI=mongodb://localhost:27017/flora_test" >> .env.test
        echo "JWT_SECRET=test_jwt_secret" >> .env.test
        echo "JWT_EXPIRE=1h" >> .env.test
        
    - name: Lint
      run: npm run lint
      
    - name: Test
      run: npm test
      
  build:
    needs: [lint-and-test-frontend, lint-and-test-backend]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: flora/frontend:latest
        
    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: flora/backend:latest