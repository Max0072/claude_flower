#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω–∞ —Ü–≤–µ—Ç–æ–≤ "–§–ª–æ—Ä–∞"
# –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –±—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω–∞ —Ü–≤–µ—Ç–æ–≤ \"–§–ª–æ—Ä–∞\""

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$ROOT_DIR"

echo "üìÇ –†–∞–±–æ—Ç–∞–µ–º —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π: $ROOT_DIR"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker –∏ docker-compose
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–∫—Ä–∏–ø—Ç–∞."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–∫—Ä–∏–ø—Ç–∞."
    exit 1
fi

echo "‚úÖ Docker –∏ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –¥–ª—è backend, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "$ROOT_DIR/backend/.env" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è backend..."
    cp "$ROOT_DIR/backend/.env.example" "$ROOT_DIR/backend/.env"
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π JWT —Å–µ–∫—Ä–µ—Ç
    JWT_SECRET=$(openssl rand -hex 32)
    # –ó–∞–º–µ–Ω—è–µ–º JWT —Å–µ–∫—Ä–µ—Ç –≤ .env —Ñ–∞–π–ª–µ
    sed -i '' "s/your_jwt_secret_key_here/$JWT_SECRET/g" "$ROOT_DIR/backend/.env" || \
    sed -i "s/your_jwt_secret_key_here/$JWT_SECRET/g" "$ROOT_DIR/backend/.env"
    echo "‚úÖ .env —Ñ–∞–π–ª –¥–ª—è backend —Å–æ–∑–¥–∞–Ω"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
cd "$ROOT_DIR/infrastructure"
docker-compose -f docker-compose.yml up -d --build

echo "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã
CONTAINERS=$(docker-compose -f docker-compose.yml ps -q)
for CONTAINER in $CONTAINERS; do
    STATUS=$(docker inspect --format='{{.State.Status}}' $CONTAINER)
    if [ "$STATUS" != "running" ]; then
        echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER –Ω–µ –∑–∞–ø—É—â–µ–Ω (—Å—Ç–∞—Ç—É—Å: $STATUS)."
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.yml logs"
        exit 1
    fi
done

echo "‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã"

# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–µ –∫ —Å–µ—Ä–≤–∏—Å–∞–º
echo ""
echo "üå∏ –û–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω —Ü–≤–µ—Ç–æ–≤ \"–§–ª–æ—Ä–∞\" —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç!"
echo ""
echo "üì± –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000"
echo "üîå –ë—ç–∫–µ–Ω–¥ API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000/api/v1"
echo "üíæ MongoDB –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: mongodb://localhost:27017/flora"
echo ""
echo "üîç –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:"
echo "  docker-compose -f $ROOT_DIR/infrastructure/docker-compose.yml logs -f"
echo ""
echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:"
echo "  docker-compose -f $ROOT_DIR/infrastructure/docker-compose.yml down"
echo ""
echo "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –ø—Ä–æ–µ–∫—Ç—É –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $ROOT_DIR/docs"
echo ""
echo "‚ö†Ô∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —ç—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"