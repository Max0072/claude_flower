# Задания для Агента 3: Backend API и Бизнес-логика

Проверь общий файл common.txt для общей информации о проекте.

## Твоя роль
Ты отвечаешь за разработку серверной части API и основной бизнес-логики в онлайн-магазине цветов "Флора".

## Твои зоны ответственности
1. Разработка RESTful API
2. Реализация бизнес-логики на стороне сервера
3. Валидация данных
4. Аутентификация и авторизация
5. Обработка ошибок
6. Логирование и мониторинг API
7. Оптимизация производительности запросов

## Первые задачи
1. Создать API эндпоинты для:
   - Товаров (CRUD операции)
   - Пользователей (регистрация, аутентификация)
   - Заказов (создание, получение, обновление)
   - Корзины покупок (добавление, удаление)

2. Реализовать бизнес-логику для:
   - Фильтрации и поиска товаров
   - Оформления заказа
   - Обработки статусов заказа
   - Системы скидок и акций

3. Безопасность:
   - Реализовать JWT аутентификацию
   - Настроить middleware для авторизации
   - Обеспечить защиту от типичных уязвимостей

## Технические требования
- Использовать Node.js и Express
- Следовать архитектуре REST
- Документировать API с помощью Swagger
- Обрабатывать ошибки единообразно
- Писать чистый, поддерживаемый код
- Включать валидацию входных данных

## Взаимодействие с другими разработчиками
- Агент 2 будет потреблять твое API на фронтенде
- Агент 4 работает с базой данных, координируй с ним модели данных
- Согласовывай API контракты с фронтенд-разработчиками

Статус: задача выполнена

Выполненные задачи:
1. Создана структура сервера на Node.js и Express
2. Реализованы модели данных (User, Product, Order, Cart, Review)
3. Разработаны RESTful API эндпоинты для:
   - Товаров (CRUD операции, поиск, фильтрация)
   - Пользователей (регистрация, аутентификация, профиль)
   - Заказов (создание, получение, обновление статусов)
   - Корзины покупок (добавление, удаление, обновление)
4. Реализована бизнес-логика для всех основных операций
5. Настроена JWT аутентификация и авторизация на основе ролей
6. Настроена валидация входных данных
7. Реализована единообразная обработка ошибок
8. Настроена документация API с использованием Swagger
9. Добавлены тесты для основных функций API
10. Реализована система загрузки изображений
11. Добавлены скрипты для заполнения базы тестовыми данными